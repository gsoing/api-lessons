swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
schemes:
- "https"
produces:
  - application/json
consumes: 
  - application/json
paths:
  "/Articles/promotions":
    get:
      tags:
      - "Articles"
      summary: "Main page / promotions"
      description: "Promotions of the day"
      produces:
      - "application/json"
      responses:
        "200":
          schema:
            $ref: '#/definitions/ArrayOfArticles'
          description: "OK"
        "204":
          description : EMPTY
  "/Articles/sort/{sorting}":
    get:
      tags:
      - "Articles"
      summary: "Get article sorted"
      description: "Get article sorted"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: sorting
        type: string
        enum: ["asc","desc"]
        required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfArticles'
  "/Articles/sort":
    get:
      tags:
      - "Articles"
      summary: "Get article sorted"
      description: "Get article sorted"
      produces:
      - "application/json"
      responses:
        "200":
          description: OK AUTO DESC
          schema:
            $ref: '#/definitions/ArrayOfArticles'
  "/Articles/Category/{category}":
    get:
      tags:
      - "Articles"
      summary: "Find by category"
      description: "search by category"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: category
        type: string
        enum: ["HIGH-TECH","MAISON","VÊTEMENTS"]
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/ArrayOfArticles'
        204:
          description: "OK but empty"
        205:
          description: "No such Category"
        206:
          description: "Must be a string"
  "/Articles/{idReferences}":
    get:
      tags:
      - "Articles"
      summary: "Find an Article"
      description: "search by id"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idReferences
        type: number
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/Article'
        205:
          description: "No such article"
        206:
          description: "Must be an number"
  "/Articles/{idReferences}/Category/{nbLinkedArticle}":
    get:
      tags:
      - "Articles"
      summary: "Get linked Articles"
      description: "Get a number of linked article"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idReferences
        type: number
        required: true
      - in: path
        name: nbLinkedArticle
        type: number
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/ArrayOfArticles'
        201:
          description: "OK but no other article"
        205:
          description: "No such article"
        206:
          description: "Must be an number"
  "/Basket/{idClient}":
    get:
      tags:
      - "Basket"
      summary: "Get Basket"
      description: "Get basket of a client"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/Basket'
        205:
          description: "Empty basket"
        206:
          description: "Must be an number"
    delete:
      tags:
      - "Basket"
      summary: "Empty Basket"
      description: "Empty basket of a client"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      responses:
        200:
          description: Empty
  "/Basket/{idClient}/Article/{idReferences}":
    get:
      tags:
        - "Basket"
      summary: "Added article from Basket"
      description: "Added article from Basket"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: idReferences
        type: number
        required: true 
      responses:
        200:
          description: "Article"
          schema:
            $ref: '#/definitions/ArticleQty'
        204:
          description: "No such article"
    put:
      tags:
      - "Basket"
      summary: "Change qty article to Basket"
      description: "Change qty article to basket of a client"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: idReferences
        type: number
        required: true
      - in: body
        name: articleQty
        schema:
          $ref: '#/definitions/ArticleQty'
      responses:
        200:
          description: "Changed qty to basket"
        204:
          description: "No such article"
        205:
          description: "Invalid qty"
        206:
          description: "Must be an number"
    delete:
      tags:
        - "Basket"
      summary: "Delete article from Basket"
      description: "Delete article from Basket"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: idReferences
        type: number
        required: true
      - in: body
        name: articleQty
        schema:
          $ref: '#/definitions/ArticleQty'
      responses:
        200:
          description: "Deleted succesfully"
        204:
          description: "No such article"
    post:
      tags:
        - "Basket"
        - "Articles"
      summary: "Add article to Basket"
      description: "Add article to Basket"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: idReferences
        type: number
        required: true
      - in: body
        name: articleQty
        schema:
          $ref: '#/definitions/ArticleQty'
      responses:
        200:
          description: "Added succesfully"
        204:
          description: "No such article"
  "/Commands/{idClient}":
    get:
      tags:
      - "Commands"
      summary: ""
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/Commands'
        204:
          description: "OK but empty"
        205:
          description: "No such Commands"
        206:
          description: "Must be a string"
    post:
      tags:
        - "Basket"
        - "Commands"
      summary: "Validate Basket and Create Commands"
      description: "Validate Basket and Create Commands"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: body
        name: articleQty
        schema:
          $ref: '#/definitions/Basket'
      responses:
        200:
          description: OK
        204:
          description : "Empty Basket"
        205:
          description: "Not a basket"
  "/Commands/{idClient}/sort/{sorting}/order/{ordering}":
    get:
      tags:
      - "Commands"
      summary: "Filter by Statut/date"
      description: "Filte by Status/date"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: sorting
        type: string
        enum: ["En cours","Validée","Terminée","Annulée"]
        required: true
      - in: path
        name: ordering
        type: string
        enum: ["date","statut","none"]
        required: true
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/ResumedCommand'
        204:
          description: "OK but empty"
        205:
          description: "No such Commands"
        206:
          description: "Must be a string"
    put:
      tags:
      - "Commands"
      summary: "Update statut to Canceled"
      description: "Update Statut to Canceled"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: sorting
        type: string
        enum: ["En cours"]
        required: true
      - in: path
        name: ordering
        type: string
        enum: ["none"]
        required: true
      - in: body
        name: command
        schema :
          $ref: '#/definitions/Commands'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/ResumedCommand'
        204:
          description: "OK but empty"
        205:
          description: "No such Commands"
        206:
          description: "Must be a string"
        207:
          description: "CANNOT MODIFIED THIS STATUT"
  "/Commands/{idClient}/generateOrder/{idCommand}":
    get:
      tags:
      - "Commands"
      summary: "Generate order from command"
      description: "Generate order from command"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: idClient
        type: number
        required: true
      - in: path
        name: idCommand
        type: number
        required: true
      responses:
        200:
          description: OK
          schema:
            type: string
            format: binary
definitions:
  Article:
    type: object
    properties:
      idReference:
        type: number
      label:
        type: string
      price:
        type: number
      description:
        type: string
      category:
        type: string
      image:
        type: string
    required:
      - idReference
      - label
      - prix
      - description
      - category
      - image
  ArrayOfArticles:
    type: array
    items:
      $ref: '#/definitions/Article'
  ArticleQty:
    type: object
    properties:
      article:
        $ref: '#/definitions/Article'
      qty:
        type: integer
    required:
      - article
      - qty
  ArrayArticleQty:
    type: array
    items:
      $ref: '#/definitions/ArticleQty'
  Basket:
    type: object
    properties:
      idBasket:
        type: number
      arrayArticlesQty:
        $ref: '#/definitions/ArrayArticleQty'
      dateLastUpdate:
        $ref: string
      totalPrice:
        type: number
      idClient:
        type: number
    required: 
      - idBasket
      - arrayArticlesQty
      - dateLastUpdate
      - totalPrice
      - idClient
  Commands:
    type: object
    properties:
      idCommand:
        type: number
      statut :
        type: string
        enum: ["En cours","Validée","Terminée","Annulée "]
      idClient:
        type: number
      createdDate:
        type: string
      updatedDate:
        type: string
      canceledReason:
        type: string
      arrayArticlesQty:
        $ref: '#/definitions/ArrayArticleQty'
      totalPrice:
        type: number
    required: 
      - idCommand
      - statut
      - createdDate
      - updatedDate
      - idClient 
      - totalPrice
      - arrayArticlesQty
  ResumedCommand:
    type: object
    properties:
      idCommand:
        type: number
      createdDate:
        type: string
      statut:
        type: string
        enum: ["En cours","Validée","Terminée","Annulée "]
      totalPrice:
        type: number
    required: 
      - idCommand
      - statut
      - createdDate
      - totalPrice