
swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
tags:
- name: "products"
  description: "Everything about our products"
- name: "baskets"
  description: "Access to your baskets"
- name: "orders"
  description: "View your orders"
schemes:
- "https"
- "http"
produces:
  - application/json
consumes: 
  - application/json
  
paths:
    /products/getProductInSuggestion:
      get:
        tags:
        - "products"
        description: "Get all product which are part of \"hot deals\"."
        responses:
          200:
            description: "successful operation"
    /products/getProductQuery/{query}:
      get:
        tags:
        - "products"
        description: "Get products by searching with keyword"
        parameters:
        - name: "query"
          in: "path"
          type: "string"
          description: "query for products by keyWord"
          required: true
        - name: "sortByPrice"
          in : "path"
          type: "string"
          enum: [asc, desc]
          required: true
        responses:
          200:
            description: "successful operation"
    /products/getProductByCategory/{category}:
      get:
        tags:
        - "products"
        description: "Get products by searching with keyword"
        parameters:
        - name: "category"
          in: "path"
          type: "string"
          enum:
          - "HIGH-TECH"
          - "MAISON"
          - "VETEMENTS"
          description: "query for products by keyWord"
          required: true
        responses:
          200:
            description: "successful operation"

    /products/getProductDetails/{productId}/{category}:
        get:
          tags:
          - "products"
          description: "Returns details about a product"
          parameters:
          - name: "productId"
            in: "path"
            description: "ID of product to return"
            required: true
            type: "integer"
          - name: "category"
            in: "path"
            type: "string"
            enum:
            - "HIGH-TECH"
            - "MAISON"
            - "VETEMENTS"
            required: true
          responses:
            200:
              description: "successful operation"
              schema:
                $ref: "#/definitions/Product"
            400:
              description: "Invalid id"
            404:
              description: "Product not found"
              
    /baskets/{userId}/addProduct/{productId}:
      put:
        tags:
        - "baskets"
        description: "Add a product into your basket"
        parameters:
        - name: "productId"
          in: "path"
          description: "ID of product to add"
          required: true
          type: "integer"
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"

        responses:
          200:
            description: "successful operation"
          400:
            description: "Invalid id"
          404:
            description: "Product not found"
    /baskets/{userId}/deleteProduct/{productId}:
      delete:
        tags:
        - "baskets"
        description: "Del a product into your basket"
        parameters:
        - name: "productId"
          in: "path"
          description: "ID of product to add"
          required: true
          type: "integer"
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"

        responses:
          200:
            description: "successful operation"
          400:
            description: "Invalid id"
          404:
            description: "Product not found"
    /baskets/{userId}/updateProductQty/{productId}/{newQty}:
      put:
        tags:
        - "baskets"
        description: "Add a product into your basket"
        parameters:
        - name: "productId"
          in: "path"
          description: "ID of product we want to modify qty"
          required: true
          type: "integer"
        - name: "newQty"
          in: "path"
          description: "new qty to set"
          required: true
          type: "integer"
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"

        responses:
          200:
            description: "successful operation"
          400:
            description: "Invalid id"
          404:
            description: "Product not found"
    /baskets/{userId}/emptyBasket:
      put:
        tags:
        - "baskets"
        description: "Empty your basket"
        parameters:
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"
        responses:
          200:
            description: "successful operation"
    /baskets/{userId}/createOrder:
      post:
        tags:
        - "baskets"
        description: "Create an order"
        parameters:
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"
        responses:
          200:
            description: "successful operation"
    /orders/{userId}/getAllOrders/{status}:
      get:
        tags:
        - "orders"
        description: "Create an order"
        parameters:
        - name: "userId"
          in: "path"
          description: "ID of the user"
          required: true
          type: "integer"
        - name: "status"
          in: "path"
          description: "ID of the user"
          required: true
          type: 'string'
          enum : [Closed,Canceled,Pending,Validate]
        responses:
          200:
            description: "successful operation"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Order"

  /orders/{orderId}:
    delete:
      tags:
      - "orders"
      summary: "cancel an existing order"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        type: "string"
        required: true
      - name: "reason"
        in: "query"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
              
  /orders/{orderId}:
    get:
      tags:
      - "orders"
      summary: "get bill for an existing order"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        type: "string"
        required: true
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"

definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
      reference:
        type: "string"
      description:
        type: "string"
      price:
        type: "integer"
      shortDescription:
        type: "string"
      pictures:
        type: "array"
        items: 
            type: "string"
      dimensions:
        type: "array"
        items: 
            type: "integer"
      isHotDeal:
        type: "boolean"
      category:
        $ref: "#/definitions/Category"
  Category:
    type: "string"
    enum:
    - "HIGH-TECH"
    - "MAISON"
    - "VETEMENTS"
  Status:
    type: "string"
    enum:
    - "Pending"
    - "Closed"
    - "Validate"
    - "Canceled"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
      creationdate:
        type: "string"
      lastUpdateDate:
        type: "string"
      Satus:
        type: "array"
        items:
          $ref: '#/definitions/Status'
      products:
        type: "array"
        items:
          $ref: '#/definitions/ProductInBasket'

  Basket:
    type: "object"
    properties:
      id:
        type: "integer"
      lastUpdateDate:
        type: "string"
      productsAdd:
        type: "array"
        items:
          $ref: '#/definitions/ProductInBasket'
  ProductInBasket:
    type: "object"
    properties:
      id:
        type: "integer"
      reference:
        type: "string"
      description:
        type: "string"
      price:
        type: "integer"
      totalPrice:
        type: "integer"
      pictures:
        type: "array"
        items: 
            type: "string"
            

        
