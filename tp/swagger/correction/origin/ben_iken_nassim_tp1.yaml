swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
tags: 
  - name: "Users"
    description: "Users main services"
  - name: "Products"
    description: "Services availables on the products"
schemes:
- "https"
produces:
  - application/json
consumes: 
  - application/json
paths:
  /products:
    get:
      tags:
      -  "Users"
      summary: "Get product's suggestions from the API"
      description: "Display all product suggestions for the logged user"
      produces:
      - "application/json"
      responses:
        200:
          description: "All the suggested products in an array"
          schema:
            $ref: "#/definitions/Product"
    
  /products/{sort}:  
    get:
      tags:
      - "Products"
      summary: "Search for a product in the database"
      description: "A user enters parameters in the query and a path param to search for a product and to sort or not the results"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: "sort"
        description: "Sort by the price "
        type: boolean
        required: true
      - in: query
        name: "label"
        description: "Label of the product"
        type: string
        required: false
      - in: query
        name: "reference"
        description: "Reference of the product"
        required: false
        type: string
      - in: query
        name: "tags"
        description: "tags to filter by"
        required: false
        type: array
        items:
          type: string
      responses:
        200:
          description: "Results of the search in an array of products matching the parameters entered by the user"
          schema:
            $ref: "#/definitions/Product"
            
  /products/{reference}/detail:
    get:
      tags:
      - "Products"
      summary: "Get all the details from a product"
      description: "Display all the information about the product indentified by the reference path parameter"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: "reference"
        description: "The reference of the product"
        type: string
        required: true
      responses:
        200:
          description: "Display the details of the product identified by the reference parameter"
          schema:
            $ref: "#/definitions/ProductDetails"
  
  /cart:
    get:
      tags:
      - "Users"
      summary: "Get the cart of the logged user"
      description: "Get all the information about the cart of the user, which are the information about the cart and the list of the products into it"
      produces:
      - "application/json"
      responses:
        200:
          description: "Display all the information about the cart, those given in the description above"
          schema:
            $ref: "#/definitions/Cart"
    
    post:
      tags:
      - "Users"
      summary: "Add a product to the cart"
      description: "Get a product from the parameters in the body and add it to the cart"
      parameters:
      - in: body
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CartProduct"
      responses:
        200:
          description: "The product has been added to the cart"
    
    delete:
      tags:
      - "Users"
      summary: "Delete all the products from the cart"
      description: "Delete all the product in the cart and make it empty"
      responses:
        200:
          description: "All the products have been deleted from the cart"
    
  
  /cart/{reference}:
    delete:
      tags:
      - "Users"
      summary: "Delete a product from the cart"
      description: "Delete the product identified by the reference path parameter from the cart of the logged user"
      parameters:
      - in: path
        name: "reference"
        description: "The reference of the product to delete from the cart"
        type: string
        required: true
      responses:
        200:
          description: "The product has been deleted from the cart"
    
    post: #If we use put, we will erase all the previous information on the product
      tags:
      - "Users"
      summary: "Update a product quantity from the cart"
      description: "Update the quantity of a product indentified by the path parameter reference, with the quantity in the query parameter"
      parameters:
      - in: path
        name: "reference"
        description: "The reference of the product to update"
        type: string
        required: true
      - in: query
        name: "quantity"
        type: string
        description: "The new quantity of the product identified by reference"
      responses:
        200:
          description: "The product quantity has been updated"
    
  /cart/validate:
      post:
        tags:
        - "Users"
        summary: "Validate a cart"
        description: "Validate a cart and create an order"
        responses:
          200:
            description: "The cart has been validated and an order has been created"
  
  /orders:
    get:
      tags:
      - "Users"
      summary: "Get all the orders of the logged user"
      description: "Get all the orders filtered by the param in the query parameters"
      parameters:
      - in: query
        name: "tags"
        description: "tags to filter by"
        required: false
        type: array
        items:
          type: string
      - in: query
        name: "statusSort"
        description: "to sort by status"
        type: boolean
        required: false
      - in: query
        name: "dateSort"
        description: "to sort by date"
        type: boolean
        required: false
      responses:
        200:
          description: "All the orders of the logged user have been  displayed"
          schema:
            $ref: "#/definitions/Order"
    

definitions:
  Product:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      price:
        type: number
      description:
        type: string
      image:
        type: string
    required:
      - reference
      - label
      - price
      - description
      - image
  
  ProductDetails:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      price:
        type: number
      description:
        type: string
      height:
        type: number
      width:
        type: number
      images:
        type: array
        items:
          type: string
      related:
        type: array
        items:
          $ref: "#/definitions/Product"
      category:
        $ref: "#/definitions/Category"
      product:
        $ref: "#/definitions/Product"
    required:
      - reference
      - label
      - price
      - description
      - images
      - category
  
  Category:
    type: string
    enum: 
    - "HIGH-TECH"
    - "MAISON"
    - "VETEMENTS"
    
  Cart:
    type: object
    properties:
      date:
        type: string
      products:
        type: array
        items:
          $ref: "#/definitions/CartProduct"
      price:
        type: number
    required: 
      - date
      - products
  
  CartProduct:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      image:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
      totalPrice:
        type: number
    required:
      - reference
      - label
      - image
      - quantity
      - unitPrice
  
  Status:
    type: string
    enum: 
    - "En cours"
    - "Validée"
    - "Terminée"
    - "Annulée"
      
  Order:
    type: object
    properties:
      status:
        $ref: "#/definitions/Status"
      createdDate:
        type: string
      updatedDate:
        type: string
      reference:
        type: string
      totalPrice:
        type: number
      products:
        type: array
        items:
          $ref: "#/definitions/CartProduct"
    required:
      - status
      - createdDate
      - updatedDate
      - reference
      - products
      