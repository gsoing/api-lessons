swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
tags: 
  - name: "product-controller"
  - name: "shoppingcart-controller"
schemes:
- "https"
produces:
  - application/json
consumes: 
  - application/json
paths:
  /suggestions:
    get:
      tags:
       - product-controller
      summary: "return all discounted goods "
      description: "return all discounted goods using GET"
      produces:
      - "application/json"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /products:
    get:
      tags:
      - product-controller
      summary: "return all products"
      description: "return all products using GET"
      produces:
      - "application/json"
      parameters:
        - name: "price"
          in: query
          description: "filter by price"
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/products/{category}':
    get:
      tags:
      - product-controller
      summary: "return products by category"
      description: "return products by category using GET"
      produces:
      - "application/json"
      parameters:
        - name: "category"
          in: path
          description: "filter by category"
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
            
  /products/{reference}/detail:
    get:
      tags:
      - product-controller
      summary: "return all the details from a product"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: "reference"
        description: "the reference of the product"
        type: string
        required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ProductDetails"
  
  /cart:
    get:
      tags:
      - shoppingcart-controller
      summary: "return the cart of the logged user"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Cart"
    post:
      tags:
        - shoppingcart-controller
      summary: "add a product to the cart"
      description: ""
      parameters:
      - in: body
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CartProduct"
      responses:
        200:
          description: OK
    
    delete:
      tags:
        - shoppingcart-controller
      summary: "delete all the products from the cart"
      description: ""
      responses:
        200:
          description: OK
    
  
  /cart/{reference}:
    delete:
      tags:
      - shoppingcart-controller
      summary: "delete a product from the cart"
      description: ""
      parameters:
      - in: path
        name: reference
        description: "the reference of the product to delete from the cart"
        type: string
        required: true
      responses:
        200:
          description: OK
    
    put:
      tags:
      - shoppingcart-controller
      summary: "update product quantity from the cart"
      description: ""
      parameters:
      - in: path
        name: "reference"
        description: "the reference of the product to update"
        type: string
        required: true
      - in: query
        name: "quantity"
        type: string
        description: "  update quantitiy of the product identified by reference"
      responses:
        200:
          description: OK
    
    
    

definitions:
  Product:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      price:
        type: number
      description:
        type: string
      image:
        type: string
      category:
        type: string
        enum: 
          - "HIGH TECH"
          - "MAISON"
          - "VETEMENTS"
    required:
      - reference
      - label
      - price
      - description
      - image
      - category
  
  ProductDetails:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      price:
        type: number
      description:
        type: string
      height:
        type: number
      width:
        type: number
      images:
        type: array
        items:
          type: string
      related:
        type: array
        items:
          $ref: "#/definitions/Product"
      product:
        $ref: "#/definitions/Product"
    required:
      - reference
      - label
      - price
      - description
      - images
      - category
    
  Cart:
    type: object
    properties:
      date:
        type: string
      products:
        type: array
        items:
          $ref: "#/definitions/CartProduct"
      price:
        type: number
    required: 
      - date
      - products
  
  CartProduct:
    type: object
    properties:
      reference:
        type: string
      label:
        type: string
      image:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
      totalPrice:
        type: number
    required:
      - reference
      - label
      - image
      - quantity
      - unitPrice