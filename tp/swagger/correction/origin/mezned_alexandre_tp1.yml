swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
tags:
- name: "Articles"
  description: "Search, sort, and filter articles."
- name: "Users"
  description: "See suggested articles. Manage shopping cart and orders from users"
schemes:
- "http"
produces:
  - application/json
consumes: 
  - application/json

paths:
  /articles:
    get:
      tags:
      - "Articles"
      summary: "Liste des articles"
      description: "Liste tous les articles. Possibilité de trier, filtrer ou rechercher."
      produces:
      - "application/json"
      parameters:
        - in: query
          name: label
          schema:
            type: string
          description: "Le nom de l'article recherché"
        - in: query
          name: prix
          type: string
          description: "asc pour un tri croissant ou desc pour un tri décroissant des prix"
        - in: query
          name: category
          schema:
          type: string
          description: "Filtrer par catégorie HIGH TECH, MAISON ou VETEMENT"
  
  /articles/{articleId}:
    get:
      tags:
      - "Articles"
      summary: "Afficher le détail d'un article"
      description: "Afficher le détail d'un article"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: articleId
          schema:
            type: integer
        - in: query
          name: detail
          schema:
            type: boolean
          description: "true pour afficher le détail de l'article"
      
  /users/{userId}/suggestedArticles:
    get:
      tags:
      - "Users"
      summary: "Liste des articles suggérés d'un client"
      description: "Liste des articles suggérés d'un client"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
      
  /users/{userId}/cart:
    get:
      tags:
      - "Users"
      summary: "Afficher le panier d'articles d'un client"
      description: "Afficher le panier d'articles d'un client"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
      
  /users/{userId}/orders:
    get:
      tags:
      - "Users"
      summary: "Afficher les commandes d'un client"
      description: "Afficher les commandes d'un client. Possibilité de trier ou filtrer"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
          description: "Le statut de la commande recherchée"
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          description: "+date (tri croissant) ou -date (tri décroissant). Idem pour statut. "
          
  /users/{userId}/orders/{orderId}/uploadBill:
    get:
      tags:
      - "Users"
      summary: "Télécharger la facture d'une commande"
      description: "Télécharger la facture d'une commande"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
        - in: path
          name: orderId
          schema:
            type: integer

          
  /users/{userId}/cart/articles/:
    post:
      tags:
      - "Users"
      summary: "Ajouter un article au panier"
      description: "Ajouter un article au panier"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "articleId"
        schema:
          $ref: "#/definitions/Article"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
        - in: "body"
          name: "quantity"
          schema:
            type: "integer"
          
    delete:
      tags:
      - "Users"
      summary: "Vider le panier"
      description: "Vider le panier"
      produces:
      - "application/json"

  /users/{userId}/orders/:
    post:
      tags:
      - "Users"
      summary: "Valider mon panier et le transformer en commande"
      description: "Valider mon panier et le transformer en commande"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: int
        - in: "body"
          name: "articles"
          schema:
            $ref: "#/definitions/Article"
            description: "ici on attend une liste d'articles avec la quantité pour chacun d'eux"

  /users/{userId}/cart/articles/{articleId}: 
    put:
      tags:
      - "Users"
      summary: "Modifier la quantité d'un article dans un panier"
      description: "Modifier la quantité d'un article dans un panier"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
        - in: path
          name: articleId
          schema:
            type: integer
        - in: "body"
          name: "quantity"
          schema:
            type: "integer"
          
    delete:
      tags:
      - "Users"
      summary: "Supprimer un article du panier"
      description: "Supprimer un article du panier"
      produces:
      - "application/json"
      parameter:
        - in: path
          name: userId
          schema:
            type: integer
        - in: path
          name: articleId
          schema:
            type: integer

  /users/{userId}/orders/{orderId}/cancel: 
    put:
      tags:
      - "Users"
      summary: "Annuler une commande"
      description: "Annuler une commande"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
        - in: path
          name: orderId
          schema:
            type: integer      
        - in: "body"
          name: "reason"
          schema:
            type: string

definitions:

  description:"Pas eu le temps de les faire mais je sais les faire."
    
      