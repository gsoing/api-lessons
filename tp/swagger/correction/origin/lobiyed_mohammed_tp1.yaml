swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
schemes:
- "https"
produces:
  - application/json
consumes: 
  - application/json
paths:
  /index:
    get:
      tags:
      - "Home"
      summary: "Main page"
      description: "Index of the API"
      produces:
      - "application/text"
      responses:
        200:
          description: OK
  /article:
    get:
      tags:
      - "Articles"
      summary: "Get all articles"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "ok"
        201:
          description: "ok"
  /article/{ref}:
    get:
      tags:
      - "Articles"
      summary: "Get an article from its ref"
      description: "ref of the product"
      parameters:
      - in: path
        name: ref
        type: integer
        required: true
      responses:
        200:
          description: OK    
          
  /article/findByPrice/{pricegt},{pricelt}:
    get:
      tags:
      - "Articles"
      summary: "Finds article by price"
      description: "Price filter"
      operationId: "findArticleByPrice"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: pricegt
        in: path
        description: "price max"
        required: true
        type: integer
      - name: pricelt
        in: path
        description: "price low"
        required: true
        type: integer
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid price value"
          
  /article/findByCathegorie:
    get:
      tags:
      - "Articles"
      summary: "Find article by price"
      description: "Price filter"
      operationId: "findArticleByCategorie"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "categorie"
        in: "query"
        description: "categorie values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "High tech"
          - "Maison"
          - "Vetemments"
          default: "available"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid categorie value"     
  /cart/addarticle:
    post:
      tags:
      - "Cart"
      summary: "Add article to cart"
      description: ""
      operationId: "AddArticleToCart"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add artcile to cart"
        required: true
        schema:
          $ref: "#/definitions/Articlepanier"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Articlepanier"
        400:
          description: "Invalid Order"
  /cart/deletearticle/{ref}:
    delete:
      tags:
      - "Cart"
      summary: "Delete an article from cart"
      description: "Delete article from cart with ref"
      parameters:
      - in: path
        name: ref
        type: integer
        required: true
      responses:
        200:
          description: OK
          
  /cart/updatearticle/{ref}:
    put:
      tags:
      - "Cart"
      summary: "Update an article "
      description: "Update qte from article in cart"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: ref
        type: integer
        required: true
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Articlepanier"
      responses:
        200:
          description: OK
  /cart/deleteall:
    delete:
      tags:
      - "Cart"
      summary: "delete all articles "
      description: "Delete all articles"
      produces:
      - "application/json"
      operationId: "ClearCart"
      responses:
        200:
          description: OK

      
           
definitions:
  Article:
    type: object
    properties:
      ref:
        type: integer
      lib:
        type: string
      price:
        type: integer
      description:
        type: string
      image:
        type: string
      categorie: 
        type: string
      Detail: 
          $ref : "#/definitions/Detail"
    required: 
      - ref
      - lib
      - price
      - description
      - image
      - categorie
      
  Detail:
      type: object
      properties:
        descriptioncomplete:
          type: string
        listdesphotos:
          type: string
          format: list
        dimention:
          type: string
        articlesimilaire:
          $ref : "#/definitions/Article"
      required: 
       - descriptioncomplete
       - listdesphotos
       - dimention
       - articlesimilaire
  Panier:
      type: object
      properties:
        datemaj:
          type: string
          format: date
        listdesarticles:
           $ref : "#/definitions/Article"
        cout:
          type: integer
      required: 
       - datemaj
       - listdesarticles
       - cout
  Articlepanier:
      type: object
      properties:
        ref:
          type: integer
        lib:
          type: string
        image:
          type: string
        qte:
          type: integer
        cout:
          type: integer
        couttotal:
          type: integer
      required: 
        - ref
        - lib
        - qte
        - cout
        - couttotal
      
              
          
          
          
          
          
          