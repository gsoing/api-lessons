swagger: "2.0"
info:
  description: "Ceci est ma super API pour remplacer Amazon"
  version: "1.0.0"
  title: "e-commerce API"
host: "commerce.io"
basePath: "/v1"
tags:
  - name: "Articles"
    description: "Search, sort, and filter articles."
  - name: "Users"
    description: "See suggested articles. Manage shopping cart and orders from users"
schemes:
- "http"
produces:
  - application/json
consumes: 
  - application/json
paths:
  /articles:
    get:
      tags:
        - "Articles"
      summary: "Liste des articles"
      description: "Liste tous les articles. Possibilité de trier, filtrer ou rechercher."
      produces:
        - "application/json"
      # Manque la pagination et le filtrage par catégorie
      parameters:
        - in: query
          name: label
          type: string
          description: "Le nom de l'article recherché"
        - in: query
          name: prix
          type: string
          description: "asc pour un tri croissant ou desc pour un tri décroissant des prix"
        - in: query
          name: category
          type: string
          description: "Filtrer par catégorie HIGH TECH, MAISON ou VETEMENT"
      responses:
        200: 
          description: OK
  /articles/{articleId}:
    get:
      tags:
        - "Articles"
      summary: "Afficher le détail d'un article"
      description: "Afficher le détail d'un article"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: articleId
          type: integer
          required: true
        # Pkoi ce paramètre detail ?
        - in: query
          name: detail
          type: boolean
          description: "true pour afficher le détail de l'article"
      responses:
        200: 
          description: OK
  /users/{userId}/suggestedArticles:
    get:
      tags:
        - "Users"
      summary: "Liste des articles suggérés d'un client"
      description: "Liste des articles suggérés d'un client"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        200: 
          description: OK          
  /users/{userId}/cart:
    get:
      tags:
        - "Users"
      summary: "Afficher le panier d'articles d'un client"
      description: "Afficher le panier d'articles d'un client"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
      responses:
        200: 
          description: OK     
  /users/{userId}/orders:
    get:
      tags:
        - "Users"
      summary: "Afficher les commandes d'un client"
      description: "Afficher les commandes d'un client. Possibilité de trier ou filtrer"
      produces:
        - "application/json"
      # Manque la pagination
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
        - in: query
          name: status
          type: string
          description: "Le statut de la commande recherchée"
        - in: query
          name: sort
          type: string
          description: "+date (tri croissant) ou -date (tri décroissant). Idem pour statut. "
      responses:
        200: 
          description: OK     
  # Le but est de récupérer la facture par de l'uploader
  # ici l'url est trompeuse
  /users/{userId}/orders/{orderId}/uploadBill:
    get:
      tags:
        - "Users"
      summary: "Télécharger la facture d'une commande"
      description: "Télécharger la facture d'une commande"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
        - in: path
          name: orderId
          type: integer
          required: true
      responses:
        200: 
          description: OK          
  /users/{userId}/cart/articles:
    parameters:
      - in: path
        name: userId
        type: integer
        required: true
    post:
      tags:
        - "Users"
      summary: "Ajouter un article au panier"
      description: "Ajouter un article au panier"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "articleId"
        schema:
          $ref: "#/definitions/Article"
      - in: "body"
        name: "quantity"
        schema:
          type: "integer"
      responses:
        200: 
          description: OK
    delete:
      tags:
        - "Users"
      summary: "Vider le panier"
      description: "Vider le panier"
      produces:
        - "application/json"
      responses:
        200: 
          description: OK
  /users/{userId}/orders:
    post:
      tags:
        - "Users"
      summary: "Valider mon panier et le transformer en commande"
      description: "Valider mon panier et le transformer en commande"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
        - in: "body"
          name: "articles"
          schema:
            $ref: "#/definitions/Article"
          description: "ici on attend une liste d'articles avec la quantité pour chacun d'eux"
      responses:
        200: 
          description: OK
  /users/{userId}/cart/articles/{articleId}:
    parameters:
      - in: path
        name: userId
        type: integer
        required: true
      - in: path
        name: articleId
        type: integer
        required: true
    put:
      tags:
        - "Users"
      summary: "Modifier la quantité d'un article dans un panier"
      description: "Modifier la quantité d'un article dans un panier"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "quantity"
          schema:
            type: "integer"
      responses:
        200: 
          description: OK          
    delete:
      tags:
      - "Users"
      summary: "Supprimer un article du panier"
      description: "Supprimer un article du panier"
      produces:
        - "application/json"
      responses:
        200: 
          description: ok
  /users/{userId}/orders/{orderId}/cancel: 
    put:
      tags:
        - "Users"
      summary: "Annuler une commande"
      description: "Annuler une commande"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
        - in: path
          name: orderId
          type: integer      
          required: true
        - in: "body"
          name: "reason"
          schema:
            type: string
      responses: 
        200:
          description: OK
#description:"Pas eu le temps de les faire mais je sais les faire."
